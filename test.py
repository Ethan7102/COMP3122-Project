import redis, json
import uuid
"""
pool = redis.ConnectionPool(host='localhost', port=6379, decode_responses=True)
db = redis.Redis(connection_pool=pool)
#a=json.loads({"error":null})
null=''
a={ "brand": "UBER_EATS", "cart": { "fulfillment_issues": [ { "fulfillment_action_type": "REMOVE_ITEM", "fulfillment_issue_type": "OUT_OF_ITEM", "item_availability_info": { "items_available": 0, "items_requested": 1 }, "root_item": { "external_data": "External data for muffin", "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" }, "id": "Muffin", "instance_id": "Muffin-Instance", "quantity": 1, "title": "Fresh-baked muffin" } }, { "fulfillment_issue_type": "PARTIAL_AVAILABILITY", "item_availability_info": { "items_available": 1, "items_requested": 2 }, "root_item": { "external_data": "External data for coffee", "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" }, "id": "Coffee", "instance_id": "CoffeeInstance", "quantity": 1, "title": "Coffee" } } ], "items": [ { "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "external_data": "External data for muffin", "id": "Muffin", "instance_id": "Muffin-Instance", "price": { "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "unit_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" } }, "quantity": 1, "selected_modifier_groups": [ { "external_data": "External data for muffin flavor choice", "id": "Choose-flavor", "removed_items": null, "selected_items": [ { "default_quantity": 0, "external_data": "External data for chocolate deluxe flavor", "id": "Chocolate-deluxe", "price": { "base_total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" } }, "quantity": 1, "title": "Chocolate deluxe" } ], "title": "Choose flavor" } ], "title": "Fresh-baked muffin" }, { "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "external_data": "External data for coffee", "id": "Coffee", "instance_id": "CoffeeInstance", "price": { "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "quantity": 1, "selected_modifier_groups": [ { "external_data": "External data for milk choice", "id": "Add-milk", "removed_items": null, "selected_items": [ { "default_quantity": 0, "external_data": "External data for milk", "id": "Milk", "price": { "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "quantity": 1, "title": "Milk" } ], "title": "Add milk" }, { "external_data": "External data for sugar choice", "id": "Add-sugar", "removed_items": [ { "default_quantity": 2, "external_data": "External data for sugar", "id": "Sugar", "price": { "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "quantity": 0, "title": "Sugar" } ], "selected_items": null, "title": "Add sugar" } ], "special_instructions": "make it iced please", "title": "Coffee" } ] }, "current_state": "CREATED", "deliveries": [ { "current_state": "ARRIVED_AT_PICKUP", "estimated_pickup_time": "2019-05-14T15:38:45-05:00", "first_name": "Bruce", "id": "65d700da-1e9d-41a7-a304-d0fdcd12b2e4", "picture_url": "https://www.example.com/picture_url", "vehicle": { "license_plate": "BICYCLE", "make": "Uber", "model": "Bicycle" } } ], "display_id": "BC953", "eater": { "first_name": "Larry", "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "phone": "+1 555-555-5555", "phone_code": "555 55 555" }, "eaters": [ { "first_name": "Larry", "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "phone": "+1 555-555-5555", "phone_code": "555 55 555" } ], "estimated_ready_for_pickup_at": "2019-05-14T15:36:54-05:00", "external_reference_id": "Order-123", "id": "f9f363d1-e1c2-4595-b477-c649845bc953", "payment": { "accounting": { "taxRemittance": { "deliveryFeeTax": null, "smallOrderFeeTax": null, "tax": { "courier": null, "eater": null, "restaurant": null, "uber": [ { "value": { "amount": 53, "currencyCode": "USD", "formattedAmount": "$0.53" } } ] }, "totalFeeTax": null } }, "charges": { "sub_total": { "amount": 650, "currency_code": "USD", "formatted_amount": "$6.50" }, "tax": { "amount": 52, "currency_code": "USD", "formatted_amount": "$0.52" }, "total": { "amount": 1399, "currency_code": "USD", "formatted_amount": "$13.99" }, "total_fee": { "amount": 697, "currency_code": "USD", "formatted_amount": "$6.97" } } }, "placed_at": "2019-05-14T15:16:54-05:00", "store": { "external_reference_id": "HARRY_123", "id": "c7f1dc2f-fabe-4997-845c-cad26fdcb894", "name": "Harry's Hamburgers" }, "type": "DELIVERY_BY_UBER" }
db.set('order',json.dumps(a))
print(a["brand"])

#null=''
#db.set('order',json.dumps({ "id": "f9f363d1-e1c2-4595-b477-c649845bc953", "display_id": "BC953", "external_reference_id": "Order-123", "current_state": "CREATED", "store": { "id": "c7f1dc2f-fabe-4997-845c-cad26fdcb894", "name": "Harry's Hamburgers", "external_reference_id": "HARRY_123" }, "eater": { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" }, "eaters": [ { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" } ], "cart": { "items": [ { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "price": { "unit_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "total_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Choose-flavor", "title": "Choose flavor", "external_data": "External data for muffin flavor choice", "selected_items": [ { "id": "Chocolate-deluxe", "title": "Chocolate deluxe", "external_data": "External data for chocolate deluxe flavor", "quantity": 1, "price": { "unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" } }, "default_quantity": 0 } ], "removed_items": None } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" }, { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "special_instructions": "make it iced please", "quantity": 1, "price": { "unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Add-milk", "title": "Add milk", "external_data": "External data for milk choice", "selected_items": [ { "id": "Milk", "title": "Milk", "external_data": "External data for milk", "quantity": 1, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 0 } ], "removed_items": None }, { "id": "Add-sugar", "title": "Add sugar", "external_data": "External data for sugar choice", "selected_items": None, "removed_items": [ { "id": "Sugar", "title": "Sugar", "external_data": "External data for sugar", "quantity": 0, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 2 } ] } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" } ], "fulfillment_issues": [ { "fulfillment_issue_type": "OUT_OF_ITEM", "fulfillment_action_type": "REMOVE_ITEM", "root_item": { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 1, "items_available": 0 } }, { "fulfillment_issue_type": "PARTIAL_AVAILABILITY", "root_item": { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 2, "items_available": 1 } } ] }, "payment": { "charges": { "total": { "amount": 1399, "currency_code": "USD", "formatted_amount": "$13.99" }, "sub_total": { "amount": 650, "currency_code": "USD", "formatted_amount": "$6.50" }, "tax": { "amount": 52, "currency_code": "USD", "formatted_amount": "$0.52" }, "total_fee": { "amount": 697, "currency_code": "USD", "formatted_amount": "$6.97" } }, "accounting": { "taxRemittance": { "tax": { "uber": [ { "value": { "amount": 53, "currencyCode": "USD", "formattedAmount": "$0.53" } } ], "restaurant": None, "courier": None, "eater": None }, "totalFeeTax": None, "deliveryFeeTax": None, "smallOrderFeeTax": None } } }, "placed_at": "2019-05-14T15:16:54-05:00", "estimated_ready_for_pickup_at": "2019-05-14T15:36:54-05:00", "type": "DELIVERY_BY_UBER", "brand": "UBER_EATS", "deliveries": [ { "id": "65d700da-1e9d-41a7-a304-d0fdcd12b2e4", "first_name": "Bruce", "vehicle": { "make": "Uber", "model": "Bicycle", "license_plate": "BICYCLE" }, "picture_url": "https://www.example.com/picture_url", "estimated_pickup_time": "2019-05-14T15:38:45-05:00", "current_state": "ARRIVED_AT_PICKUP" } ] }))
#db.set('order',json.dumps({ "id": "f9f363d1-e1c2-4595-b477-c649845bc953", "display_id": "BC953", "external_reference_id": "Order-123", "current_state": "CREATED", "store": { "id": "c7f1dc2f-fabe-4997-845c-cad26fdcb894", "name": "Harry's Hamburgers", "external_reference_id": "HARRY_123" }, "eater": { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" }, "eaters": [ { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" } ], "cart": { "items": [ { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "price": { "unit_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "total_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Choose-flavor", "title": "Choose flavor", "external_data": "External data for muffin flavor choice", "selected_items": [ { "id": "Chocolate-deluxe", "title": "Chocolate deluxe", "external_data": "External data for chocolate deluxe flavor", "quantity": 1, "price": { "unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" } }, "default_quantity": 0 } ], "removed_items": null } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" }, { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "special_instructions": "make it iced please", "quantity": 1, "price": { "unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Add-milk", "title": "Add milk", "external_data": "External data for milk choice", "selected_items": [ { "id": "Milk", "title": "Milk", "external_data": "External data for milk", "quantity": 1, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 0 } ], "removed_items": null }, { "id": "Add-sugar", "title": "Add sugar", "external_data": "External data for sugar choice", "selected_items": null, "removed_items": [ { "id": "Sugar", "title": "Sugar", "external_data": "External data for sugar", "quantity": 0, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 2 } ] } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" } ], "fulfillment_issues": [ { "fulfillment_issue_type": "OUT_OF_ITEM", "fulfillment_action_type": "REMOVE_ITEM", "root_item": { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 1, "items_available": 0 } }, { "fulfillment_issue_type": "PARTIAL_AVAILABILITY", "root_item": { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 2, "items_available": 1 } } ] }, "payment": { "charges": { "total": { "amount": 1399, "currency_code": "USD", "formatted_amount": "$13.99" }, "sub_total": { "amount": 650, "currency_code": "USD", "formatted_amount": "$6.50" }, "tax": { "amount": 52, "currency_code": "USD", "formatted_amount": "$0.52" }, "total_fee": { "amount": 697, "currency_code": "USD", "formatted_amount": "$6.97" } }, "accounting": { "taxRemittance": { "tax": { "uber": [ { "value": { "amount": 53, "currencyCode": "USD", "formattedAmount": "$0.53" } } ], "restaurant": null, "courier": null, "eater": null }, "totalFeeTax": null, "deliveryFeeTax": null, "smallOrderFeeTax": null } } }, "placed_at": "2019-05-14T15:16:54-05:00", "estimated_ready_for_pickup_at": "2019-05-14T15:36:54-05:00", "type": "DELIVERY_BY_UBER", "brand": "UBER_EATS", "deliveries": [ { "id": "65d700da-1e9d-41a7-a304-d0fdcd12b2e4", "first_name": "Bruce", "vehicle": { "make": "Uber", "model": "Bicycle", "license_plate": "BICYCLE" }, "picture_url": "https://www.example.com/picture_url", "estimated_pickup_time": "2019-05-14T15:38:45-05:00", "current_state": "ARRIVED_AT_PICKUP" } ] }))
order=json.loads(db.get("order"))
print(order["id"])

db.hset("orders", "f9f363d1-e1c2-4595-b477-c649845bc953", json.dumps({ "id": "f9f363d1-e1c2-4595-b477-c649845bc953", "display_id": "BC953", "external_reference_id": "Order-123", "current_state": "CREATED", "store": { "id": "c7f1dc2f-fabe-4997-845c-cad26fdcb894", "name": "Harry's Hamburgers", "external_reference_id": "HARRY_123" }, "eater": { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" }, "eaters": [ { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" } ], "cart": { "items": [ { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "price": { "unit_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "total_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Choose-flavor", "title": "Choose flavor", "external_data": "External data for muffin flavor choice", "selected_items": [ { "id": "Chocolate-deluxe", "title": "Chocolate deluxe", "external_data": "External data for chocolate deluxe flavor", "quantity": 1, "price": { "unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" } }, "default_quantity": 0 } ], "removed_items": null } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" }, { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "special_instructions": "make it iced please", "quantity": 1, "price": { "unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Add-milk", "title": "Add milk", "external_data": "External data for milk choice", "selected_items": [ { "id": "Milk", "title": "Milk", "external_data": "External data for milk", "quantity": 1, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 0 } ], "removed_items": null }, { "id": "Add-sugar", "title": "Add sugar", "external_data": "External data for sugar choice", "selected_items": null, "removed_items": [ { "id": "Sugar", "title": "Sugar", "external_data": "External data for sugar", "quantity": 0, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 2 } ] } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" } ], "fulfillment_issues": [ { "fulfillment_issue_type": "OUT_OF_ITEM", "fulfillment_action_type": "REMOVE_ITEM", "root_item": { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 1, "items_available": 0 } }, { "fulfillment_issue_type": "PARTIAL_AVAILABILITY", "root_item": { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 2, "items_available": 1 } } ] }, "payment": { "charges": { "total": { "amount": 1399, "currency_code": "USD", "formatted_amount": "$13.99" }, "sub_total": { "amount": 650, "currency_code": "USD", "formatted_amount": "$6.50" }, "tax": { "amount": 52, "currency_code": "USD", "formatted_amount": "$0.52" }, "total_fee": { "amount": 697, "currency_code": "USD", "formatted_amount": "$6.97" } }, "accounting": { "taxRemittance": { "tax": { "uber": [ { "value": { "amount": 53, "currencyCode": "USD", "formattedAmount": "$0.53" } } ], "restaurant": null, "courier": null, "eater": null }, "totalFeeTax": null, "deliveryFeeTax": null, "smallOrderFeeTax": null } } }, "placed_at": "2019-05-14T15:16:54-05:00", "estimated_ready_for_pickup_at": "2019-05-14T15:36:54-05:00", "type": "DELIVERY_BY_UBER", "brand": "UBER_EATS", "deliveries": [ { "id": "65d700da-1e9d-41a7-a304-d0fdcd12b2e4", "first_name": "Bruce", "vehicle": { "make": "Uber", "model": "Bicycle", "license_plate": "BICYCLE" }, "picture_url": "https://www.example.com/picture_url", "estimated_pickup_time": "2019-05-14T15:38:45-05:00", "current_state": "ARRIVED_AT_PICKUP" } ] }))
db.hset("orders", "f9f363d1-e1c2-4595-b477-c649845bc952", json.dumps({ "id": "f9f363d1-e1c2-4595-b477-c649845bc953", "display_id": "BC953", "external_reference_id": "Order-123", "current_state": "CREATED", "store": { "id": "c7f1dc2f-fabe-4997-845c-cad26fdcb894", "name": "Harry's Hamburgers", "external_reference_id": "HARRY_123" }, "eater": { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" }, "eaters": [ { "id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78", "first_name": "Larry", "phone": "+1 555-555-5555", "phone_code": "555 55 555" } ], "cart": { "items": [ { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "price": { "unit_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "total_price": { "amount": 350, "currency_code": "USD", "formatted_amount": "$3.50" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Choose-flavor", "title": "Choose flavor", "external_data": "External data for muffin flavor choice", "selected_items": [ { "id": "Chocolate-deluxe", "title": "Chocolate deluxe", "external_data": "External data for chocolate deluxe flavor", "quantity": 1, "price": { "unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_unit_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" }, "base_total_price": { "amount": 50, "currency_code": "USD", "formatted_amount": "$0.50" } }, "default_quantity": 0 } ], "removed_items": null } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" }, { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "special_instructions": "make it iced please", "quantity": 1, "price": { "unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_unit_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" }, "base_total_price": { "amount": 300, "currency_code": "USD", "formatted_amount": "$3.00" } }, "selected_modifier_groups": [ { "id": "Add-milk", "title": "Add milk", "external_data": "External data for milk choice", "selected_items": [ { "id": "Milk", "title": "Milk", "external_data": "External data for milk", "quantity": 1, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 0 } ], "removed_items": null }, { "id": "Add-sugar", "title": "Add sugar", "external_data": "External data for sugar choice", "selected_items": null, "removed_items": [ { "id": "Sugar", "title": "Sugar", "external_data": "External data for sugar", "quantity": 0, "price": { "unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_unit_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" }, "base_total_price": { "amount": 0, "currency_code": "USD", "formatted_amount": "$0.00" } }, "default_quantity": 2 } ] } ], "eater_id": "63578c8b-9cd2-4c4f-91fc-315f575e6a78" } ], "fulfillment_issues": [ { "fulfillment_issue_type": "OUT_OF_ITEM", "fulfillment_action_type": "REMOVE_ITEM", "root_item": { "id": "Muffin", "instance_id": "Muffin-Instance", "title": "Fresh-baked muffin", "external_data": "External data for muffin", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 1, "items_available": 0 } }, { "fulfillment_issue_type": "PARTIAL_AVAILABILITY", "root_item": { "id": "Coffee", "instance_id": "CoffeeInstance", "title": "Coffee", "external_data": "External data for coffee", "quantity": 1, "fulfillment_action": { "fulfillment_action_type": "REMOVE_ITEM" } }, "item_availability_info": { "items_requested": 2, "items_available": 1 } } ] }, "payment": { "charges": { "total": { "amount": 1399, "currency_code": "USD", "formatted_amount": "$13.99" }, "sub_total": { "amount": 650, "currency_code": "USD", "formatted_amount": "$6.50" }, "tax": { "amount": 52, "currency_code": "USD", "formatted_amount": "$0.52" }, "total_fee": { "amount": 697, "currency_code": "USD", "formatted_amount": "$6.97" } }, "accounting": { "taxRemittance": { "tax": { "uber": [ { "value": { "amount": 53, "currencyCode": "USD", "formattedAmount": "$0.53" } } ], "restaurant": null, "courier": null, "eater": null }, "totalFeeTax": null, "deliveryFeeTax": null, "smallOrderFeeTax": null } } }, "placed_at": "2019-05-14T15:16:54-05:00", "estimated_ready_for_pickup_at": "2019-05-14T15:36:54-05:00", "type": "DELIVERY_BY_UBER", "brand": "UBER_EATS", "deliveries": [ { "id": "65d700da-1e9d-41a7-a304-d0fdcd12b2e4", "first_name": "Bruce", "vehicle": { "make": "Uber", "model": "Bicycle", "license_plate": "BICYCLE" }, "picture_url": "https://www.example.com/picture_url", "estimated_pickup_time": "2019-05-14T15:38:45-05:00", "current_state": "ARRIVED_AT_PICKUP" } ] }))

print(db.hget("orders", "f9f363d1-e1c2-4595-b477-c649845bc953"))

db.hset("hash1", "k1", "v1")
db.hset("hash1", "k2", "v2")
print(db.hkeys("hash1")) # 取hash中所有的key
print(db.hget("hash1", "k1"))    # 单个取hash的key对应的值
print(db.hmget("hash1", "k1", "k2")) # 多个取hash的key对应的值
db.hsetnx("hash1", "k2", "v3") # 只能新建
print(db.hget("hash1", "k2"))
"""

def create_order(_order_id,_order_state):
    """
    Create an order entity.

    :param _order_id: It is the order ID .
    :param _order_state: It is the order state.
    :return: A dict with the entity properties.
    """
    return {
        'id': str(uuid.uuid4()),
        'order_id': _order_id,
        'order_state': _order_state
    }
data = '{"id":"1234","state":"created"}'
data = json.loads(data)

order=create_order(data["id"],data["state"])
print(order["id"],order["order_id"], order['order_state'])
print(order)